


others:
=======

priority
--------
!!! op_from_fn_argument ... location


not to forget
-------------

generating of OP_ASR
!!! PSEUDO_REG can have pseudo->ident

type recursion
-- with (typedef'd) functions?
-- during adjust_cl_operand_accessors?

varargs?

consider
--------
cache hit/miss counters (GLOBALS(counter.xyz))


sparse:
=======
* does not complain about nonsensical recursive type (see tests/struct/rs1-01.c.bad)
* generates phi instruction after unssa (hash_table.c: 85)
* generates unnecessary copy instruction before ret (unssa?) <<< probably OK
* simplify.c: simplify_constant_rightside ... add LSR, support also left
* arg_count (sparse-llvm would profit too)


code listener:
==============

* accessors with CL_OPERAND_CST
* type->items for CL_TYPE_FNC ([0] = return value, [1+] = args, why one extra
                               expected?)



-----------

interesting:
simplify.c: operand_size

