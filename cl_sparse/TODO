failing tests:
==============


others:
=======

priority
--------
op_from_fn_argument ... location
is_insn_interesting ... keep/remove
bring the signals back (as it sometimes ends without printing sparse messages)


not to forget
-------------

generating of OP_ASR
PSEUDO_REG can have pseudo->ident
sym->endpos.type to determine end pos (as with c2xml)

type recursion
-- with (typedef'd) functions?
-- during adjust_cl_operand_accessors?



sparse:
=======
* does not complain about nonsensical recursive type (see tests/struct/rs1-01.c.bad)
* generates phi instruction after unssa (hash_table.c: 85)
* generates unnecessary copy instruction before ret (unssa?) <<< probably OK
* simplify.c: simplify_constant_rightside ... add LSR, support also left


code listener:
==============

* accessors with CL_OPERAND_CST
* type->items for CL_TYPE_FNC ([0] = return value, [1+] = args, why one extra
                               expected?)



-----------

interesting:
simplify.c: operand_size

