>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
sparse_initialize (lib.c)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
init_symbols (symbol.c)
	init_stream (tokenize.c)
	hash_ident (tokenize.c) - repeat for each
		hash_name (tokenize.c)
			ident_hash_init (tokenize.c) - macro
			ident_hash_add (tokenize.c) - macro
			ident_hash_end (tokenize.c) - macro
		insert_hash (tokenize.c)
	init_parser (parse.c)
		create_symbol (symbol.c)
			built_in_token (tokenize.c)
				__alloc_token (allocate.c) - extra macro
					allocate (allocate.c)
						blob_alloc (compat/mmap-blob.c)
				built_in_ident (tokenize.c)
					hash_name (tokenize.c)
						ident_hash_init (tokenize.c) - macro
						ident_hash_add (tokenize.c) - macro
						ident_hash_end (tokenize.c) - macro
					create_hashed_ident (tokenize.c)
						alloc_ident (tokenize.c)
							__alloc_ident (allocate.c) - extra macro
								allocate (allocate.c)
									blob_alloc (compat/mmap-blob.c)
			alloc_symbol (symbol.c)
				__alloc_symbol (allocate.c) - extra macro
					allocate (allocate.c)
						blob_alloc (compat/mmap-blob.c)
			bind_symbol (symbol.c)
				toplevel (scope.h)
				is_extern_inline (symbol.h) - inline
					is_function (symbol.h) - inline
				bind_scope (scope.c)
					add_symbol (lib.h) - inline
						add_ptr_list (ptrlist.h) - macro
							add_ptr_list_tag (ptrlist.h) - macro
								...
									__add_ptr_list (ptrlist.c)
										__alloc_ptrlist (ptrlist.c)
											allocate (allocate.c)
												blob_alloc (compat/mmap-blob.c)
handle_switch (lib.c)
add_ptr_list_notag (ptrlist.h) - macro
	...
		__add_ptr_list (ptrlist.c)
			allocate (allocate.c)
				blob_alloc (compat/mmap-blob.c)
handle_switch_W_finalize (lib.c)
handle_switch_v_finalize (lib.c)
ptr_list_empty (ptrlist.h) - macro
init_ctype (symbol.c)
	{for each defined type}
	bits_to_bytes (target.h) - inline
create_builtin_stream (lib.c)
	{repeatedly}
	add_pre_buffer (lib.c)
		tokenize_buffer (tokenize.c)
			setup_stream (tokenize.c)
				alloc_token (tokenize.c)
					__alloc_token (allocate.c) - extra macro
						allocate (allocate.c)
							blob_alloc (compat/mmap-blob.c)
					stream_pos (tokenize.c)
				token_type (token.h) - macro
			tokenize_stream (tokenize.c)
				nextchar (tokenize.c)
					nextchar_slow (tokenize.c)
				alloc_token (tokenize.c)
					.. (see above)
				get_one_token (tokenize.c)
					get_one_number (tokenize.c)
						..
					get_one_identifier (tokenize.c)
						ident_hash_init (tokenize.c) - macro
						ident_hash_add (tokenize.c) - macro
						ident_hash_end (tokenize.c) - macro
						create_hashed_ident (tokenize.c)
							alloc_ident (tokenize.c)
								__alloc_ident (allocate.c) - extra macro
									allocate (allocate.c)
										blob_alloc (compat/mmap-blob.c)
						get_char_token (tokenize.c)
							escapechar (tokenize.c)
							add_token (tokenize.c)
						get_string_token (tokenize.c)
							escapechar (tokenize.c)
							__alloc_string (allocate.c) - extra macro
								allocate (allocate.c)
									blob_alloc (compat/mmap-blob.c)
							add_token (tokenize.c)
					get_one_special (tokenize.c)
						add_token (tokenize.c)
				mark_eof (tokenize.c)
					alloc_token (tokenize.c)
						.. (see above)
declare_builtin_functions (lib.c)
	add_pre_buffer (lib.c)
		.. (see above)
sparse_initial (lib.c)
	{for each included file}
	tokenize (tokenize.c)
		init_stream (tokenize.c)
		setup_stream (tokenize.c)
			alloc_token (tokenize.c)
				.. (see above)
		tokenize_stream (tokenize.c)
				.. (see above)
	sparse_tokenstream (lib.c)
		preprocess (pre-process.c)
			init_preprocessor (pre-process.c)
				init_stream (tokenize.c)
				create_symbol (symbol.c)
					.. (see above)
				create_symbol (symbol.c)
					.. (see above)
			do_preprocess (pre-process.c)
				scan_next (pre-process.c)
				eof_token (token.h) - macro
				match_op (token.h) - inline
				preprocessor_line (pre-process.c)
					handle_preprocessor_line (pre-process.c)
						lookup_symbol (symbol.c)
						dirty_stream (pre-process.c) - macro
						handler (pre-process.c) - polymorphic
						(handle_define, handle_undef, ...)
				__free_token (allocate.c) - extra macro
					free_one_entry (allocate.c)
				expand_one_symbol (pre-process.c)
					lookup_macro (pre-process.c)
						lookup_symbol (symbol.c)
					expand (pre-process.c)
						scan_next (pre-process.c)
						match_op (token.h) - inline
						collect_arguments (pre-process.c)
							collect_arg (pre-process.c)
								scan_next (pre-process.c) - inline
								preprocessor_line (pre-process.c)
									.. (see above)
						substitute (pre-process.c)
							.. (case)
					replace_with_integer/string (pre-process.c)
		external_declaration (parse.c)
			declaration_specifiers (parse.c)
				apply_ctype (parse.c) !!!
					{if modifier}
					apply_qualifier (parse.c)
					concat_ptr_list (ptrlist.c)
				alloc_symbol (symbol.c)
					.. (see above)
				create_fouled (symbol.c)
					alloc_symbol (symbol.c)
						.. (see above)
					add_symbol (lib.h) - inline
						.. (see above)
			storage_modifiers (parse.c)
			alloc_symbol (symbol.c)
				.. (see above)
			declarator (parse.c)
				pointer (parse.c)
					alloc_symbol (symbol.c)
						.. (see above)
					handle_qualifiers (parse.c)
				direct_declarator (parse.c)
					is_nested (parse.c)
						skip_attributes (parse.c)
							skip_attribute (parse.c)
					handle_attributes (parse.c)
					which_func (parse.c)
					alloc_indirect_symbol (parse.c)
						alloc_symbol (symbol.c)
							.. (see above)
					abstract_array_declarator (parse.c)
						match_idents (parse.c)
						parse_expression (expression.c)
							comma_expression (expression.c)
								LR_BINOP_EXPRESSION (expression.c) - macro
									..
			handle_attributes (parse.c)
			apply_modifiers (parse.c)
			bind_symbol (symbol.c)
				.. (see above)
			lookup_type (expression.h) - inline
			parse_function_body (parse.c)
				start_function (parse.c)
					start_function_scope (parse.c)
						start_scope (scope.c)
							__alloc_scope (allocate.c) - extra macro
								allocate (allocate.c)
									blob_alloc (compat/mmap-blob.c)
					bind_symbol (symbol.c)
						.. (see above)
					fn_local_symbol (parse.c)
						add_symbol (lib.h) - inline
							.. (see above)
				declare_argument (parse.c)
					bind_symbol (symbol.c)
						.. (see above)
				compound_statement (parse.c)
					statement_list (parse.c)
						alloc_statement (parse.c)
							__alloc_statement (allocate.c) - extra macro
								allocate (allocate.c)
									blob_alloc (compat/mmap-blob.c)
						external_declaration (parse.c)
							.. (see above, recursion)
						statement (parse.c)
							alloc_statement (parse.c)
								.. (see above)
							parse_for_statement/do_statement... (parse.c) !!!
							start_symbol_scope (scope.c)
								start_scope (scope.c)
									.. (see above)
							compound_statement (parse.c)
								.. (see above, recursion)
							end_symbol_scope (scope.c)
								end_scope (scope.c)
									remove_symbol_scope (scope.c)
							expression_statement (parse.c)
								parse_expression (expression.c)
									.. (see above)
						add_statement (lib.h) - inline
							add_ptr_list (ptrlist.h) - macro
								.. (see above)
				end_function (parse.c)
					end_function_scope (scope.c)
						end_scope (scope.c)
							.. (see above)
				check_declaration (symbol.c)
			initializer (parse.c)
				alloc_expression (expression.h) - inline
					__alloc_expression (allocate.c) - extra macro
						allocate (allocate.c)
							blob_alloc (compat/mmap-blob.c)
				initializer_list (parse.c)
					single_initializer (parse.c)
						identifier_expression (parse.c)
							alloc_expression (expression.h) - inline
								.. (see above)
						initializer (parse.c)
							.. (see above, recursion)
						identifier_expression (parse.c)
							.. (see above)
						constant_expression (expression.h) - macro
							conditional_expression (expression.c)
								logical_or_expression (expression.c)
									LR_BINOP_EXPRESSION (expression.c) - macro
										..
						index_expression (parse.c)
							alloc_expression (expression.h) - inline
								.. (see above)
							const_expression_value (expand.c)
								__get_expression_value (expand.c)
									evaluate_expression (evaluate.c)
										evaluate_string (evaluate.c)
										evaluate_symbol_expression (evaluate.c)
										evaluate_expression (evaluate.c)
										evaluate_binop (evaluate.c)
										evaluate_logical (evaluate.c)
										evaluate_comma (evaluate.c)
										evaluate_compare (evaluate.c)
										evaluate_assignment (evaluate.c)
										evaluate_preop (evaluate.c)
										evaluate_postop (evaluate.c)
										evaluate_cast (evaluate.c)
										evaluate_sizeof (evaluate.c)
										evaluate_ptrsizeof (evaluate.c)
										evaluate_alignof (evaluate.c)
										evaluate_member_dereference (evaluate.c)
										evaluate_call (evaluate.c)
										evaluate_conditional_expression (evaluate.c)
										evaluate_statement (evaluate.c)
										evaluate_symbol (evaluate.c)
											examine_symbol_type (symbol.c)
												examine_node_type (symbol.c)
													examine_base_type (symbol.c)
														examine_symbol_type (symbol.c)
															.. (see above, recursion)
													count_array_initializer (symbol.c)
												examine_array_type (symbol.c)
													examine_base_type (symbol.c)
														.. (see above)
													get_expression_value (expand.c)
														__get_expression_value (expand.c)
															.. (see above)
												examine_struct_union_type (symbol.c)
													lay_out_struct (symbol.c)
														examine_symbol_type (symbol.c)
															.. (see above)
													lay_out_union (symbol.c)
														examine_symbol_type (symbol.c)
															.. (see above)
												examine_pointer_type (symbol.c)
												examine_enum_type (symbol.c)
													examine_base_type (symbol.c)
														.. (see above)
												examine_bitfield_type (symbol.c)
													examine_base_type (symbol.c)
														.. (see above)
												evaluate_expression (evaluate.c)
													.. (see above)
												examine_base_type (symbol.c)
													.. (see above)
											get_base_type (symbol.h) - inline
												examine_symbol_type (symbol.c)
													.. (see above)
											evaluate_initializer (evaluate.c)
												classify_type (evaluate.c) - inline
													evaluate_expression (evaluate.c)
														.. (see above)
												handle_simple_initializer (evaluate.c)
													handle_scalar (evaluate.c)
													evaluate_expression (evaluate.c)
														.. (see above)
													compatible_assignment_types (evaluate.c)
														classify_type (evaluate.c) - inline
															.. (see above)
														restricted_value (evaluate.c)
														is_null_pointer_constant (evaluate.c)
															is_zero_constant (expand.c)
																expand_expression (expand.c)
																	expand_symbol_expression (expand.c)
																	expand_binop (expand.c)
																		expand_expression (expand.c)
																			.. (see above, recursion)
																		simplify_int_binop (expand.c)
																			check_shift_count (expand.c)
																		simplify_float_binop (expand.c)
																	expand_logical (expand.c)
																		expand_expression (expand.c)
																			.. (see above, recursion)
																	expand_comma (expand.c)
																		expand_expression (expand.c)
																			.. (see above, recursion)
																	expand_compare (expand.c)
																		expand_expression (expand.c)
																			.. (see above, recursion)
																		simplify_cmp_binop (expand.c)
																		simplify_float_cmp (expand.c)
																	expand_assignment (expand.c)
																		expand_expression (expand.c)
																			.. (see above, recursion)
																	expand_preop (expand.c)
																		expand_dereference (expand.c)
																			expand_expression (expand.c)
																				.. (see above, recursion)
																		expand_addressof (expand.c)
																			expand_expression (expand.c)
																				.. (see above, recursion)
																		expand_postop (expand.c)
																			expand_expression (expand.c)
																				.. (see above, recursion)
																		expand_expression (expand.c)
																			.. (see above, recursion)
																		simplify_preop (expand.c)
																		simplify_float_preop (expand.c)
																	expand_postop (expand.c)
																		expand_expression (expand.c)
																			.. (see above, recursion)
																	expand_cast (expand.c)
																		expand_expression (expand.c)
																			.. (see above, recursion)
																	expand_call (expand.c)
																		expand_arguments (expand.c)
																			expand_expression (expand.c)
																				.. (see above, recursion)
																	expand_conditional (expand.c)
																		expand_expression (expand.c)
																			.. (see above, recursion)
																	expand_statement (expand.c)
																		expand_symbol (expand.c)
																			expand_expression (expand.c)
																				.. (see above, recursion)
																			expand_statement (expand.c)
																				.. (see above, recursion)
																		expand_return_expression (expand.c)
																			expand_expression (expand.c)
																		expand_expression (expand.c)
																			.. (see above, recursion)
																		expand_compound (expand.c)
																			expand_symbol (expand.c)
																				.. (see above)
																			expand_statement (expand.c)
																				.. (see above, recursion)
																		expand_if_statement (expand.c)
																			expand_expression (expand.c)
																				.. (see above, recursion)
																			expand_statement (expand.c)
																				.. (see above, recursion)
																		expand_const_expression (expand.c)
																			expand_expression (expand.c)
																				.. (see above, recursion)
																	sort_expression_list (expand.c)
																		sort_list (sort.c)
																		compare_expressions (expand.c)
																	verify_nonoverlapping (expand.c)
																	expand_expression_list (expand.c)
																		expand_expression (expand.c)
																			.. (see above, recursion)
																	expand_expression (expand.c)
																		.. (see above, recursion)
																	expand_pos_expression (expand.c)
																		alloc_expression (expression.h) - inline
																			.. (see above)
																		expand_expression (expand.c)
																			.. (see above, recursion)
														examine_pointer_target (symbol.c)
															examine_base_type (symbol.c)
																.. (see above)
														target_qualifiers (evaluate.c)
														type_difference (evaluate.c)
															examine_pointer_target (symbol.c)
																.. (see above)
															examine_fn_arguments (evaluate.c)
																evaluate_symbol (evaluate.c)
																	.. (see above)
																alloc_symbol (symbol.c)
																	.. (see above)
																examine_symbol_type (symbol.c)
																	.. (see above)
														cast_to (evaluate.c)
															warn_for_different_enum_types (evaluate.c)
															same_cast_type (evaluate.c)
															alloc_expression (expression.h) - inline
																.. (see above)
													handle_list_initializer (evaluate.c)
														first_subobject (evaluate.c)
															alloc_expression (expression.h) - inline
																.. (see above)
														next_designators (evaluate.c)
															alloc_expression (expression.h) - inline
																.. (see above)
															convert_ident (evaluate.c)
														check_designators (evaluate.c)
															find_struct_ident (evaluate.c)
														convert_designators (evaluate.c)
														classify_type (evaluate.c) - inline
															.. (see above)
														handle_simple_initializer (evaluate.c)
															.. (see above)
													alloc_expression (expression.h) - inline
														.. (see above)
													evaluate_expression (evaluate.c)
														.. (see above)
											evaluate_symbol (evaluate.c)
												.. (see above)
											examine_fn_arguments (evaluate.c)
												.. (see above)
											uninline (inline.c)
												create_symbol_list (inline.c)
													create_copy_symbol (inline.c)
														alloc_symbol (symbol.c)
															.. (see above)
														set_replace (inline.c)
													add_symbol (lib.h) - inline
														.. (see above)
												alloc_statement (parse.c)
													.. (see above)
												copy_statement (inline.c)
													add_statement (lib.h) - inline
														.. (see above)
													copy_statement (inline.c)
														.. (see above, recursion)
													copy_symbol (inline.c)
												unset_replace_list (inline.c)
													unset_replace (inline.c)
											evaluate_statement (evaluate.c)
												.. (see above)
										evaluate_offsetof (evaluate.c)
											examine_symbol_type (symbol.c)
												.. (see above)
											classify_type (evaluate.c) - inline
											find_identifier (evaluate.c)
											unrestrict (evaluate.c)
											alloc_const_expression (expression.h)
												__alloc_expression (allocate.c)
													.. (see above)
											evaluate_expression (evaluate.c)
												.. (see above)
						initializer (parse.c)
							.. (see above, recursion)
					add_expression (lib.h)
						add_ptr_list (ptrlist.h) - macro
							.. (see above)
				assignment_expression (expression.c)
					conditional_expression (expression.c)
						.. (see above)
					alloc_expression (expression.h) - inline
						.. (see above)
					assignment_expression (expression.c)
						.. (see above, recursion)
			add_symbol (lib.h) - inline
				.. (see above)
			fn_local_symbol (parse.c)
				add_symbol (lib.h) - inline
					.. (see above)
			check_declaration (symbol.c)
			alloc_symbol (symbol.c)
				.. (see above)
			handle_attributes (parse.c)
			declarator (parse.c)
				.. (see above)
			handle_attributes (parse.c)
			apply_modifiers (parse.c)
			bind_symbol (symbol.c)
				.. (see above)
protect_token_alloc (allocate.c) - extra macro
	protect_allocations (allocate.c)

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
sparse (lib.c)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
__sparse (lib.c)
	sparse_keep_tokens (lib.c)
		new_file_scope (scope.c)
			end_file_scope (scope.c)
				end_scope (scope.c)
					.. (see above)
			start_file_scope (scope.c)
				__alloc_scope (allocate.c) - extra macro
					.. (see above)
		sparse_file (lib.c)
			tokenize (tokenize.c)
				.. (see above)
			sparse_tokenstream (lib.c)
				.. (see above)
	clear_token_alloc (allocate.c)
		drop_all_allocations (allocate.c)
			blob_free (compat/mmap-blob.c)
evaluate_symbol_list (evaluate.c)
	evaluate_symbol (evaluate.c)
		.. (see above)
	check_duplicates (evaluate.c)
		evaluate_symbol (evaluate.c)
			.. (see above)
		type_difference (evaluate.c)
			.. (see above)

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
linearize_symbol (linearize.c)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
linearize_fn (linearize.c)
	alloc_entrypoint (linearize.c)
		__alloc_entrypoint (allocate.c)
			allocate (allocate.c)
				blob_alloc (compat/mmap-blob.c)
	alloc_basic_block (linearize.c)
		__alloc_basic_block (allocate.c)
			allocate (allocate.c)
				blob_alloc (compat/mmap-blob.c)
	set_activeblock (linearize.c)
		bb_terminated (linearize.h) - inline
		add_goto (linearize.c)
			bb_reachable (linearize.h) - inline
			alloc_instruction (linearize.c)
				__alloc_instruction (allocate.c)
					allocate (allocate.c)
						blob_alloc (compat/mmap-blob.c)
			add_instruction (linearize.h) - inline
				add_ptr_list (ptrlist.h) - macro
					.. (see above)
		bb_reachable (linearize.h) - inline
		add_bb (linearize.h) - inline
	alloc_instruction (linearize.c)
		.. (see above)
	add_one_insn (linearize.c)
		bb_reachable (linearize.h) - inline
		add_instruction (linearize.h) - inline
	concat_symbol_list (lib.h) - inline
		concat_ptr_list (ptrlist.c)
	linearize_argument (linearize.c)
		symbol_pseudo (linearize.c)
			__alloc_pseudo (allocate.c)
				allocate (allocate.c)
					blob_alloc (compat/mmap-blob.c)
		linearize_store_gen (linearize.c)
			value_pseudo (linearize.c)
				__alloc_pseudo (allocate.c)
					.. (see above)
			add_binary_op (linearize.c)
				alloc_typed_instruction (linearize.c)
					alloc_instruction (linearize.c)
						.. (see above)
				alloc_pseudo (linearize.c)
					__alloc_pseudo (allocate.c)
						.. (see above)
				use_pseudo (linearize.h) - inline
					has_use_list (linearize.h) - inline
					alloc_pseudo_user (linearize.h) - inline
						__alloc_pseudo_user (linearize.c)
							allocate (allocate.c)
								blob_alloc (compat/mmap-blob.c)
					add_pseudo_user_ptr (linearize.h) - inline
						add_ptr_list (ptrlist.h) - macro
							.. (see above)
				add_one_insn (linearize.c)
					.. (see above)
			add_store (linearize.c)
				bb_reachable (linearize.h) - inline
				alloc_typed_instruction (linearize.c)
					.. (see above)
		finish_address_gen (linearize.c)
	linearize_statement (linearize.c)
		linearize_declaration (linearize.c)
			concat_symbol_list (lib.h) - inline
				.. (see above)
			linearize_one_symbol (linearize.c)
				symbol_pseudo (linearize.c)
					.. (see above)
				linearize_initializer (linearize.c)
					linearize_initializer (linearize.c)
						.. (see above, recursion)
					linearize_position (linearize.c)
						linearize_initializer (linearize.c)
							.. (see above, recursion)
					linearize_expression (linearize.c)
						linearize_one_symbol (linearize.c)
							.. (see above, recursion)
						add_symbol_address (linearize.c)
							alloc_instruction (linearize.c)
								.. (see above)
							alloc_pseudo (linearize.c)
								.. (see above)
							use_pseudo (linearize.h) - inline
								.. (see above)
							add_one_insn (linearize.c)
								.. (see above)
						value_pseudo (linearize.c)
							.. (see above)
						add_setval (linearize.c)
							alloc_typed_instruction (linearize.c)
								.. (see above)
							alloc_pseudo (linearize.c)
								.. (see above)
						linearize_statement (linearize.c)
							.. (see above, recursion)
						linearize_call_expression (linearize.c)
							alloc_typed_instruction (linearize.c)
								.. (see above)
							linearize_expression (linearize.c)
								.. (see above, recursion)
							add_pseudo (linearize.h) - inline
								add_ptr_list (ptrlist.h) - macro
									.. (see above)
							use_pseudo (linearize.h) - inline
								alloc_pseudo_user (linearize.h) - inline
								add_pseudo_user_ptr (linearize.h) - inline
									.. (see above)
							symbol_pseudo (linearize.c)
								.. (see above)
							linearize_expression (linearize.c)
								.. (see above, recursion)
							use_pseudo (linearize.h) - inline
								.. (see above)
							alloc_pseudo (linearize.c)
								.. (see above)
							add_one_insn (linearize.c)
								.. (see above)
							alloc_instruction (linearize.c)
								.. (see above)
						linearize_binop (linearize.c)
							linearize_expression (linearize.c)
								.. (see above)
							opcode_sign (linearize.c)
							add_binary_op (linearize.c)
								.. (see above)
						linearize_logical (linearize.c)
							alloc_const_expression (expression.h) - inline
								.. (see above)
							linearize_conditional (linearize.c)
								alloc_basic_block (linearize.c)
									.. (see above)
								linearize_cond_branch (linearize.c)
									bb_reachable (linearize.h) - inline
									add_goto (linearize.c)
										.. (see above)
									linearize_logical_branch (linearize.c)
										alloc_basic_block (linearize.c)
											.. (see above)
										linearize_cond_branch (linearize.c)
											.. (see above, recursion)
										set_activeblock (linearize.c)
											.. (see above)
									linearize_compare (linearize.c)
										linearize_expression (linearize.c)
											.. (see above)
										add_binary_op (linearize.c)
											.. (see above)
									add_branch (linearize.c)
										alloc_instruction (linearize.c)
											.. (see above)
										add_bb (linearize.h) - inline
										add_one_insn (linearize.c)
											.. (see above)
									linearize_cond_branch (linearize.c)
										.. (see above)
									linearize_expression (linearize.c)
										.. (see above)
								set_activeblock (linearize.c)
									.. (see above)
								linearize_expression (linearize.c)
									.. (see above)
								alloc_phi (linearize.c)
									alloc_instruction (linearize.c)
										.. (see above)
									__alloc_pseudo (allocate.c)
										.. (see above)
									use_pseudo (linearize.h) - inline
									add_instruction (linearize.h) - inline
								add_goto (linearize.c)
									.. (see above)
								add_join_conditional (linearize.c)
									alloc_typed_instruction (linearize.c)
										.. (see above)
									use_pseudo (linearize.h) - inline
										.. (see above)
									alloc_pseudo (linearize.c)
										.. (see above)
									add_one_insn (linearize.c)
										.. (see above)
						linearize_compare (linearize.c)
							.. (see above)
						linearize_select (linearize.c)
							linearize_expression (linearize.c)
								.. (see above)
						linearize_short_conditional (linearize.c)
							alloc_basic_block (linearize.c)
								.. (see above)
							linearize_expression (linearize.c)
								.. (see above)
							alloc_phi (linearize.c)
								.. (see above)
							add_branch (linearize.c)
								.. (see above)
							set_activeblock (linearize.c)
								.. (see above)
							add_join_conditional (linearize.c)
								.. (see above)
						linearize_conditional (linearize.c)
						linearize_expression (linearize.c)
						linearize_assignment (linearize.c)
							linearize_expression (linearize.c)
								.. (see above)
							linearize_address_gen (linearize.c)
								linearize_simple_address (linearize.c)
									linearize_one_symbol (linearize.c)
										.. (see above)
									symbol_pseudo (linearize.c)
									get_expression_value (expand.c)
										.. (see above)
									linearize_simple_adress (linearize.c)
										.. (see above, recursion)
									linearize_expression (linearize.c)
										.. (see above)
							linearize_load_gen (linearize.c)
								add_load (linearize.c)
									alloc_typed_instruction (linearize.c)
										.. (see above)
									alloc_pseudo (linearize.c)
										.. (see above)
									use_pseudo (linearize.h) -- inline
										.. (see above)
									add_one_insn (linearize.c)
										.. (see above)
								value_pseudo (linearize.c)
									.. (see above)
								add_binary_op (linearize.c)
									.. (see above)
							cast_pseudo (linearize.c)
								alloc_cast_instruction (linearize.c)
									alloc_typed_instruction (linearize.c)
										.. (see above)
								alloc_pseudo (linearize.c)
									.. (see above)
								use_pseudo (linearize.h) - inline
									.. (see above)
								add_one_insn (linearize.c)
									.. (see above)
							opcode_sign (linearize.c)
							add_binary_op (linearize.c)
								.. (see above)
							linearize_store_gen (linearize.c)
								.. (see above)
							finish_address_gen (linearize.c)
						linearize_preop (linearize.c)
							linearize_access (linearize.c)
								linearize_address_gen (linearize.c)
									.. (see above)
								linearize_load_gen (linearize.c)
									.. (see above)
								finish_address_gen (linearize.c)
							linearize_inc_dec (linearize.c)
								linearize_address_gen (linearize.c)
									.. (see above)
								linearize_load_gen (linearize.c)
									.. (see above)
								value_pseudo (linearize.c)
									.. (see above)
								add_binary_op (linearize.c)
									.. (see above)
								linearize_store_gen (linearize.c)
									.. (see above)
								finish_address_gen (linearize.c)
							linearize_regular_preop (linearize.c)
								linearize_expression (linearize.c)
									.. (see above)
								value_pseudo (linearize.c)
									.. (see above)
								add_binary_op (linearize.c)
								add_uniop (linearize.c)
									alloc_typed_instruction (linearize.c)
										.. (see above)
									alloc_pseudo (linearize.c)
										.. (see above)
									use_pseudo (linearize.h) - inline
									add_one_insn (linearize.c)
										.. (see above)
						linearize_postop (linearize.c)
							linearize_inc_dec (linearize.c)
								.. (see above)
						linearize_cast (linearize.c)
							linearize_expression (linearize.c)
								.. (see above)
							cast_pseudo (linearize.c)
								.. (see above)
						linearize_slice (linearize.c)
							linearize_expression (linearize.c)
								.. (see above)
							alloc_typed_instruction (linearize.c)
								.. (see above)
							alloc_pseudo (linearize.c)
								.. (see above)
					base_type (linearize.c)
					linearize_store_gen (linearize.c)
						.. (see above)
				finish_addres_gen (linearize.c)
		linearize_context (linearize.c)
			alloc_intruction (linearize.c)
				.. (see above)
			add_one_insn (linearize.c)
				.. (see above)
		linearize_range (linearize.c)
			linearize_expression (linearize.c)
				.. (see above)
			add_one_insn (linearize.c)
				.. (see above)
		linearize_expression (linearize.c)
			.. (see above)
		linearize_asm_statement (linearize.c)
			alloc_intruction (linearize.c)
				.. (see above)
			__alloc_asm_rules (linearize.c)
				allocate (allocate.c)
					blob_alloc (compat/mmap-blob.c)
			add_asm_input (linearize.c)
				linearize_expression (linearize.c)
					.. (see above)
				__alloc_asm_constraint (linearize.c)
					allocate (allocate.c)
						blob_alloc (compat/mmap-blob.c)
				use_pseudo (linearize.h) - inline
								.. (see above)
				add_ptr_list (ptrlist.h) - macro
					.. (see above)
		get_bound_block (linearize.c)
			alloc_basic_block (linearize.c)
				.. (see above)
			..
		add_label (linearize.c)
			set_activeblock (linearize.c)
				.. (see above)
		linearize_statement (linearize.c)
			.. (see above)
		..
		add_goto (linearize.c)
			.. (see above)
		alloc_multijmp (linearize.c)
			__alloc_multijmp (allocate.c)
				allocate (allocate.c)
					blob_alloc (compat/mmap-blob.c)
		add_multijmp (linearize.h) - inline
			add_ptr_list (ptrlist.h) - macro
				.. (see above)
		..
		linearize_inlined_call (linearize.c)
			alloc_instruction (linearize.c)
				.. (see above)
			..
			linearize_compound_statement (linearize.c)
				linearize_statement (linearize.c)
					.. (see above)
				add_label (linearize.c)
					.. (see above)
				first_instruction (lib.h) - inline
					first_ptr_list (ptrlist.h) - inline
						..
				first_pseudo (lib.h) - inline
					first_ptr_list (ptrlist.h) - inline
						..
		..
	bb_reachable (linearize.h) - inline
	bb_terminated (linearize.h) - inline
	alloc_typed_instruction (linearize.c)
		.. (see above)
	use_pseudo (linearize.h) - inline
		.. (see above)
	add_one_insn (linearize.c)
		.. (see above)
	kill_unreachable_bbs (flow.c)
		mark_bb_reachable (flow.c)
			mark_bb_reachable (flow.c)
				.. (see above) (flow.c)
		kill_bb (flow.c)
			kill_instruction (simplify.c)
				kill_use (simplify.c)
					remove_usage (simplify.c)
						delete_pseudo_user_list_entry (simplify.c)
							DELETE_CURRENT_PTR (ptrlist.h) - macro
								..
							pack_ptr_list (ptrlist.c)
								__free_ptrlist (ptrlist.c)
									free_one_entry (allocate.c)
						kill_instruction (simplify.c)
							.. (see above, recursive)
			kill_defs (flow.c)
				has_use_list (linearize.h) - inline
				convert_instruction_target (flow.c)
					concat_user_list (flow.c) - inline
						concat_ptr_list (ptrlist.c)
			remove_bb_from_list (linearize.h) - inline
				delete_ptr_list_entry (ptrlist.c)
					DELETE_CURRENT_PTR (ptrlist.h) - macro
						..
	simplify_symbol_usage (flow.c)
		simplify_one_symbol (flow.c)
			check_access (flow.c)
			convert_load_instruction (flow.c)
				convert_instruction_target (flow.c)
					concat_user_list (flow.c) - inline
						concat_ptr_list (ptrlist.c)
			kill_store (flow.c)
				kill_use (simplify.c)
					.. (see above)
			find_dominating_stores (flow.c)
				dominates (flow.c)
					same_memop (flow.c) - inline
					overlapping_memop (flow.c)
				convert_load_instruction (flow.c)
					.. (see above)
				find_dominating_stores (flow.c)
					.. (see above, recursion)
				rewrite_load_instruction (flow.c)
					first_pseudo (lib.h) - inline
						.. (see above)
					convert_load_instruction (flow.c)
						.. (see above)
			kill_dominated_stores (flow.c)
				kill_store (flow.c)
					.. (see above)
				dominates (flow.c)
					.. (see above)
				kill_dominated_stores (flow.c)
					.. (see above, recursion)
			kill_dead_stores (flow.c)
				kill_dead_stores (flow.c)
					.. (see above, recursion)
	cleanup_and_cse (cse.c)
		simplify_memops (memops.c)
			simplify_loads (memops.c)
				local_pseudo (memops.c)
				check_access (flow.c)
				dominates (flow.c)
					.. (see above)
				convert_load_instruction (flow.c)
					.. (see above)
				find_dominating_parents (flow.c)
					dominates ()
					find_dominating_parents (flow.c)
						.. (see above, recursion)
					delete_last_instruction (lib.h) - inline
							undo_ptr_list_last (ptrlist.c)
					alloc_phi (linearize.c)
						.. (see above)
					add_instruction (linearize.h)
						.. (see above)
					use_pseudo (linearize.h) - inline
				rewrite_load_instruction (flow.c)
					.. (see above)
			kill_dominated_stores (flow.c)
				.. (see above)
		clean_up_insns (cse.c)
			clean_up_one_instruction (cse.c)
				simplify_instruction (simplify.c)
					simplify_binop (simplify.c)
						simplify_constant_binop (simplify.c)
							replace_with_pseudo (simplify.c)
								convert_instruction_target (flow.c)
									.. (see above)
						simplify_constant_leftside (simplify.c)
							replace_with_pseudo (simplify.c)
								.. (see above)
						simplify_constant_rightside ()
							value_pseudo (linearize.c)
								.. (see above)
							replace_with_pseudo (simplify.c)
								.. (see above)
							simplify_asr (simplify.c)
								replace_with_pseudo (simplify.c)
									.. (see above)
					simplify_commulative_binop (simplify.c)
						canonical_order (simplify.c)
						switch_pseudo (simplify.c)
							use_pseudo (linearize.h) - inline
								.. (see above)
							remove_usage (simplify.c)
								.. (see above)
					simplify_associative_binop (simplify.c)
						simple_pseudo (simplify.c)
						switch_pseudo (simplify.c)
							.. (see above)
					simplify_unop (simplify.c)
						dead_insn (simplify.c)
							kill_use (simplify.c)
						simplify_constant_unop (simplify.c)
							replace_with_pseudo (simplify.c)
								.. (see above)
					simplify_memop (simplify.c)
						simplify_one_memop (simplify.c)
							kill_use (simplify.c)
								.. (see above)
							use_pseudo (linearize.h) - inline
								.. (see above)
					dead_insn (simplify.c)
						.. (see above)
					replace_with_pseudo (simplify.c)
						.. (see above)
					simplify_cast (simplify.c)
						dead_insn (simplify.c)
							.. (see above)
						get_cast_value (simplify.c)
						value_pseudo (linearize.c)
							.. (see above)
						replace_with_pseudo (simplify.c)
							.. (see above)
					clear_phi (simplify.c)
					clean_up_phi (simplify.c)
						convert_instruction_target (flow.c)
							.. (see above)
						clear_phi (simplify.c)
						if_convert_phi (simplify.c)
							linearize_ptr_list (ptrlist.c)
							phi_parent (simplify.c)
								bb_list_size (lib.h) - inline
									ptr_list_size (ptrlist.c)
								first_basic_block (lib.h) - inline
									first_ptr_list (ptrlist.h) - inline
							last_instruction (lib.h) - inline
								last_ptr_list (ptrlist.h) - inline
							insert_select (linearize.c)
								delete_last_instruction (lib.h) - inline
									.. (see above)
								alloc_instruction (linearize.c)
									.. (see above)
								use_pseudo (linearize.h) - inline
								add_instruction (linearize.h) - inline
							clear_phi (simplify.c)
					simplify_select (simplify.c)
						dead_insn (simplify.c)
							.. (see above)
						constant (simplify.c)
					simplify_branch (simplify.c)
						insert_branch (linearize.c)
							delete_last_instruction (lib.h) - inline
								.. (see above)
						remove_bb_from_list (linearize.h) - inline
							.. (see above)
						kill_use (simplify.c)
							.. (see above)
						constant (simplify.c)
						simplify_cond_branch (simplify.c)
							use_pseudo (linearize.h) - inline
								.. (see above)
							remove_usage (simplify.c)
								.. (see above)
						use_pseudo (linearize.h) - inline
							.. (see above)
						remove_usage (simplify.c)
							.. (see above)
					simplify_switch (simplify.c)
						constant (simplify.c)
						insert_branch (linearize.c)
							.. (see above)
					simplify_range (simplify.c)
						is_in_range (simplify.c)
						kill_instruction (simplify.c)
							.. (see above)
				add_instruction (linearize.h) - inline
					.. (see above)
		sort_instruction_list (cse.c)
			sort_list (sort.c)
			insn_compare (cse.c)
				phi_list_compare (cse.c)
		insn_compare (cse.c)
			.. (see above)
		try_to_cse (cse.c)
			cse_one_instruction (cse.c)
				convert_instruction_target (flow.c)
					.. (see above)
			bb_dominates (cse.c)
				bb_dominates (cse.c)
					.. (see above, recursion)
			trivial_common_parent (cse.c)
				first_basic_block (lib.h) - inline
					.. (see above)
			remove_instruction (cse.c) - inline
				delete_ptr_list_entry (ptrlist.c)
					.. (see above)
			add_instruction_to_end (cse.c)
				delete_last_instruction (lib.h) - inline
					.. (see above)
				add_instruction (linearize.h) - inline
					.. (see above)
		free_ptr_list (ptrlist.h) - macro
			__free_ptr_list (ptrlist.c)
	pack_basic_blocks (flow.c)
		bb_reachable (linearize.h) - inline
			.. (see above)
		rewrite_branch_bb (flow.c)
			first_basic_block (lib.h) - inline
			rewrite_parent_branch (flow.c)
				last_instruction (lib.h) - inline
					.. (see above)
				rewrite_branch (flow.c)
					replace_bb_in_list (linearize.h) - inline
						replace_ptr_list_entry (ptrlist.c)
							REPLACE_CURRENT_PTR (ptrlist.h) - inline
					remove_bb_from_list (linearize.h) - inline
						.. (see above)
					add_bb (linearize.h) - inline
		kill_bb (flow.c)
			.. (see above)
		replace_bb_in_list (linearize.h) - inline
			.. (see above)
		kill_instruction (simplify.c)
			.. (see above)
		add_instruction (linearize.h) - inline
			.. (see above)
	kill_unreachable_bbs (flow.c)
		.. (see above)
	vrfy_flow (flow.c)
		vrfy_bb_flow (flow.c)
			vrfy_children (flow.c)
				last_instruction (lib.h) - inline
					.. (see above)
				vrfy_bb_in_list (flow.c)
			vrfy_parents (flow.c)
				vrfy_bb_in_list (flow.c)
	clear_symbol_pseudos (linearize.c)
	track_pseudo_liveness (liveness.c)
		track_instruction_usage (liveness.c)
			insn_uses (liveness.c)
				trackable_pseudo (liveness.c) - inline 
				add_pseudo_exclusive (liveness.c)
					pseudo_in_list (liveness.c)
					add_pseudo (linearize.h) - inline
						add_ptr_list (ptrlist.h) - macro
							.. (see above)
			insn_defines (liveness.c)
				add_pseudo (linearize.h) - inline
					.. (see above)
		track_bb_liveness ()
			pseudo_in_list (liveness.c)
			add_pseudo_exclusive (liveness.c)
				.. (see above)
		PACK_PTR_LIST (ptrlist.h) - macro
			pack_ptr_list (ptrlist.c)
	simplify_flow (flow.c)
		simplify_branch_nodes (flow.c)
			simplify_one_branch (flow.c)
				simplify_phi_branch (flow.c)
					bb_has_side_effects (flow.c)
					try_to_simplify_bb (flow.c)
						last_instruction (lib.h) - inline
							.. (see above)
						pseudo_truth_value (flow.c)
						bb_depends_on (flow.c)
							pseudo_in_list (liveness.c)
						rewrite_branch (flow.c)
							.. (see above)
				simplify_branch_branch (flow.c)
					last_instruction (lib.h) - inline
						.. (see above)
					bb_has_side_effect (flow.c)
						.. (see above)
					bb_depends_on (flow.c)
						.. (see above)
					rewrite_branch (flow.c)
						.. (see above)
					bb_list_size (lib.h) - inline
						.. (see above)
					insert_branch (linearize.c)
						.. (see above)
						add_instruction (linearize.h) - inline
							.. (see above)
						remove_parent (linearize.c)
							remove_bb_from_list (linearize.h) - inline
								.. (see above)
							kill_bb (flow.c)
								.. (see above)
						PACK_PTR_LIST (ptrlist.h) - macro
							.. (see above)
					kill_instruction (simplify.c)
						.. (see above)
	clear_liveness (liveness.c)
		free_ptr_list (ptrlist.h) - macro
			.. (see above)
